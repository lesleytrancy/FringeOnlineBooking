{"ast":null,"code":"export default {\n  namespaced: true,\n  state: () => ({\n    events: [],\n    featuredEvents: [],\n    categories: [],\n    loading: false,\n    error: null\n  }),\n  mutations: {\n    SET_EVENTS(state, events) {\n      state.events = events;\n    },\n    SET_FEATURED_EVENTS(state, events) {\n      state.featuredEvents = events;\n    },\n    SET_CATEGORIES(state, categories) {\n      state.categories = categories;\n    },\n    SET_LOADING(state, loading) {\n      state.loading = loading;\n    },\n    SET_ERROR(state, error) {\n      state.error = error;\n    }\n  },\n  actions: {\n    async fetchEvents({\n      commit\n    }, filters = {}) {\n      commit('SET_LOADING', true);\n      try {\n        // TODO: Implement API call with filters\n        const events = await fakeFetchEvents(filters);\n        commit('SET_EVENTS', events);\n        return events;\n      } catch (error) {\n        commit('SET_ERROR', error.message);\n        throw error;\n      } finally {\n        commit('SET_LOADING', false);\n      }\n    },\n    async fetchFeaturedEvents({\n      commit\n    }) {\n      commit('SET_LOADING', true);\n      try {\n        // TODO: Implement API call\n        const events = await fakeFetchFeaturedEvents();\n        commit('SET_FEATURED_EVENTS', events);\n        return events;\n      } catch (error) {\n        commit('SET_ERROR', error.message);\n        throw error;\n      } finally {\n        commit('SET_LOADING', false);\n      }\n    },\n    async fetchCategories({\n      commit\n    }) {\n      commit('SET_LOADING', true);\n      try {\n        // TODO: Implement API call\n        const categories = await fakeFetchCategories();\n        commit('SET_CATEGORIES', categories);\n        return categories;\n      } catch (error) {\n        commit('SET_ERROR', error.message);\n        throw error;\n      } finally {\n        commit('SET_LOADING', false);\n      }\n    }\n  },\n  getters: {\n    allEvents: state => state.events,\n    featuredEvents: state => state.featuredEvents,\n    eventCategories: state => state.categories,\n    isLoading: state => state.loading,\n    error: state => state.error\n  }\n};\n\n// Temporary mock functions\nasync function fakeFetchEvents(filters) {\n  return [{\n    id: 1,\n    title: 'Sample Event 1',\n    description: 'This is a sample event',\n    date: '2025-04-15',\n    location: 'Adelaide',\n    price: 25.00,\n    category: 'Music',\n    image: '/images/event1.jpg'\n  }, {\n    id: 2,\n    title: 'Sample Event 2',\n    description: 'Another sample event',\n    date: '2025-04-20',\n    location: 'Melbourne',\n    price: 35.00,\n    category: 'Theatre',\n    image: '/images/event2.jpg'\n  }].filter(event => {\n    if (filters.category && event.category !== filters.category) return false;\n    if (filters.location && event.location !== filters.location) return false;\n    return true;\n  });\n}\nasync function fakeFetchFeaturedEvents() {\n  return [{\n    id: 3,\n    title: 'Featured Event',\n    description: 'This is a featured event',\n    date: '2025-05-01',\n    location: 'Sydney',\n    price: 45.00,\n    category: 'Comedy',\n    image: '/images/featured.jpg'\n  }];\n}\nasync function fakeFetchCategories() {\n  return ['Music', 'Theatre', 'Comedy', 'Dance', 'Visual Arts'];\n}","map":{"version":3,"names":["namespaced","state","events","featuredEvents","categories","loading","error","mutations","SET_EVENTS","SET_FEATURED_EVENTS","SET_CATEGORIES","SET_LOADING","SET_ERROR","actions","fetchEvents","commit","filters","fakeFetchEvents","message","fetchFeaturedEvents","fakeFetchFeaturedEvents","fetchCategories","fakeFetchCategories","getters","allEvents","eventCategories","isLoading","id","title","description","date","location","price","category","image","filter","event"],"sources":["/Users/lesleytrancy/Documents/COMP9034 DevOps and Enterprise Systems Project/FringeOnlineBooking/frontend-public/src/store/modules/events.js"],"sourcesContent":["export default {\n  namespaced: true,\n  state: () => ({\n    events: [],\n    featuredEvents: [],\n    categories: [],\n    loading: false,\n    error: null\n  }),\n  mutations: {\n    SET_EVENTS(state, events) {\n      state.events = events\n    },\n    SET_FEATURED_EVENTS(state, events) {\n      state.featuredEvents = events\n    },\n    SET_CATEGORIES(state, categories) {\n      state.categories = categories\n    },\n    SET_LOADING(state, loading) {\n      state.loading = loading\n    },\n    SET_ERROR(state, error) {\n      state.error = error\n    }\n  },\n  actions: {\n    async fetchEvents({ commit }, filters = {}) {\n      commit('SET_LOADING', true)\n      try {\n        // TODO: Implement API call with filters\n        const events = await fakeFetchEvents(filters)\n        commit('SET_EVENTS', events)\n        return events\n      } catch (error) {\n        commit('SET_ERROR', error.message)\n        throw error\n      } finally {\n        commit('SET_LOADING', false)\n      }\n    },\n    async fetchFeaturedEvents({ commit }) {\n      commit('SET_LOADING', true)\n      try {\n        // TODO: Implement API call\n        const events = await fakeFetchFeaturedEvents()\n        commit('SET_FEATURED_EVENTS', events)\n        return events\n      } catch (error) {\n        commit('SET_ERROR', error.message)\n        throw error\n      } finally {\n        commit('SET_LOADING', false)\n      }\n    },\n    async fetchCategories({ commit }) {\n      commit('SET_LOADING', true)\n      try {\n        // TODO: Implement API call\n        const categories = await fakeFetchCategories()\n        commit('SET_CATEGORIES', categories)\n        return categories\n      } catch (error) {\n        commit('SET_ERROR', error.message)\n        throw error\n      } finally {\n        commit('SET_LOADING', false)\n      }\n    }\n  },\n  getters: {\n    allEvents: state => state.events,\n    featuredEvents: state => state.featuredEvents,\n    eventCategories: state => state.categories,\n    isLoading: state => state.loading,\n    error: state => state.error\n  }\n}\n\n// Temporary mock functions\nasync function fakeFetchEvents(filters) {\n  return [\n    {\n      id: 1,\n      title: 'Sample Event 1',\n      description: 'This is a sample event',\n      date: '2025-04-15',\n      location: 'Adelaide',\n      price: 25.00,\n      category: 'Music',\n      image: '/images/event1.jpg'\n    },\n    {\n      id: 2,\n      title: 'Sample Event 2',\n      description: 'Another sample event',\n      date: '2025-04-20',\n      location: 'Melbourne',\n      price: 35.00,\n      category: 'Theatre',\n      image: '/images/event2.jpg'\n    }\n  ].filter(event => {\n    if (filters.category && event.category !== filters.category) return false\n    if (filters.location && event.location !== filters.location) return false\n    return true\n  })\n}\n\nasync function fakeFetchFeaturedEvents() {\n  return [\n    {\n      id: 3,\n      title: 'Featured Event',\n      description: 'This is a featured event',\n      date: '2025-05-01',\n      location: 'Sydney',\n      price: 45.00,\n      category: 'Comedy',\n      image: '/images/featured.jpg'\n    }\n  ]\n}\n\nasync function fakeFetchCategories() {\n  return ['Music', 'Theatre', 'Comedy', 'Dance', 'Visual Arts']\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}