{"ast":null,"code":"export default {\n  namespaced: true,\n  state: () => ({\n    cart: [],\n    booking: null,\n    loading: false,\n    error: null\n  }),\n  mutations: {\n    ADD_TO_CART(state, ticket) {\n      state.cart.push(ticket);\n    },\n    REMOVE_FROM_CART(state, index) {\n      state.cart.splice(index, 1);\n    },\n    CLEAR_CART(state) {\n      state.cart = [];\n    },\n    SET_BOOKING(state, booking) {\n      state.booking = booking;\n    },\n    SET_LOADING(state, loading) {\n      state.loading = loading;\n    },\n    SET_ERROR(state, error) {\n      state.error = error;\n    }\n  },\n  actions: {\n    async addToCart({\n      commit\n    }, ticket) {\n      commit('ADD_TO_CART', ticket);\n    },\n    async removeFromCart({\n      commit\n    }, index) {\n      commit('REMOVE_FROM_CART', index);\n    },\n    async clearCart({\n      commit\n    }) {\n      commit('CLEAR_CART');\n    },\n    async createBooking({\n      commit,\n      state\n    }) {\n      commit('SET_LOADING', true);\n      try {\n        // TODO: Implement API call\n        const booking = await fakeCreateBooking(state.cart);\n        commit('SET_BOOKING', booking);\n        commit('CLEAR_CART');\n        return booking;\n      } catch (error) {\n        commit('SET_ERROR', error.message);\n        throw error;\n      } finally {\n        commit('SET_LOADING', false);\n      }\n    }\n  },\n  getters: {\n    cartItems: state => state.cart,\n    cartTotal: state => state.cart.reduce((total, item) => total + item.price, 0),\n    currentBooking: state => state.booking,\n    isLoading: state => state.loading,\n    error: state => state.error\n  }\n};\n\n// Temporary mock function\nasync function fakeCreateBooking(tickets) {\n  return {\n    id: Math.random().toString(36).substring(2, 9),\n    tickets,\n    total: tickets.reduce((sum, ticket) => sum + ticket.price, 0),\n    date: new Date().toISOString()\n  };\n}","map":{"version":3,"names":["namespaced","state","cart","booking","loading","error","mutations","ADD_TO_CART","ticket","push","REMOVE_FROM_CART","index","splice","CLEAR_CART","SET_BOOKING","SET_LOADING","SET_ERROR","actions","addToCart","commit","removeFromCart","clearCart","createBooking","fakeCreateBooking","message","getters","cartItems","cartTotal","reduce","total","item","price","currentBooking","isLoading","tickets","id","Math","random","toString","substring","sum","date","Date","toISOString"],"sources":["/Users/lesleytrancy/Documents/COMP9034 DevOps and Enterprise Systems Project/FringeOnlineBooking/frontend-public/src/store/modules/tickets.js"],"sourcesContent":["export default {\n  namespaced: true,\n  state: () => ({\n    cart: [],\n    booking: null,\n    loading: false,\n    error: null\n  }),\n  mutations: {\n    ADD_TO_CART(state, ticket) {\n      state.cart.push(ticket)\n    },\n    REMOVE_FROM_CART(state, index) {\n      state.cart.splice(index, 1)\n    },\n    CLEAR_CART(state) {\n      state.cart = []\n    },\n    SET_BOOKING(state, booking) {\n      state.booking = booking\n    },\n    SET_LOADING(state, loading) {\n      state.loading = loading\n    },\n    SET_ERROR(state, error) {\n      state.error = error\n    }\n  },\n  actions: {\n    async addToCart({ commit }, ticket) {\n      commit('ADD_TO_CART', ticket)\n    },\n    async removeFromCart({ commit }, index) {\n      commit('REMOVE_FROM_CART', index)\n    },\n    async clearCart({ commit }) {\n      commit('CLEAR_CART')\n    },\n    async createBooking({ commit, state }) {\n      commit('SET_LOADING', true)\n      try {\n        // TODO: Implement API call\n        const booking = await fakeCreateBooking(state.cart)\n        commit('SET_BOOKING', booking)\n        commit('CLEAR_CART')\n        return booking\n      } catch (error) {\n        commit('SET_ERROR', error.message)\n        throw error\n      } finally {\n        commit('SET_LOADING', false)\n      }\n    }\n  },\n  getters: {\n    cartItems: state => state.cart,\n    cartTotal: state => state.cart.reduce((total, item) => total + item.price, 0),\n    currentBooking: state => state.booking,\n    isLoading: state => state.loading,\n    error: state => state.error\n  }\n}\n\n// Temporary mock function\nasync function fakeCreateBooking(tickets) {\n  return {\n    id: Math.random().toString(36).substring(2, 9),\n    tickets,\n    total: tickets.reduce((sum, ticket) => sum + ticket.price, 0),\n    date: new Date().toISOString()\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}